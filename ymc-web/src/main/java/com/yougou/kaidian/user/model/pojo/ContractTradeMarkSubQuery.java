/*
 * 类名 com.yougou.merchant.api.supplier.vo.ContractTradeMarkSubQuery
 * 
 * 日期  Tue Jun 23 13:25:28 CST 2015
 * 
 * 版权声明Copyright (C) 2013 YouGou Information Technology Co.,Ltd 
 * All Rights Reserved. 
 * 
 * The software for the YouGou technology development, without the 
 * company's written consent, and any other individuals and 
 * organizations shall not be used, Copying, Modify or distribute 
 * the software.
 * 
 */
package com.yougou.kaidian.user.model.pojo;

import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import org.apache.commons.lang.StringUtils;

public class ContractTradeMarkSubQuery {
    /**
     * This field was generated by YouGou MyBatis Generator.
     * This field corresponds to the database table tbl_sp_supplier_contract_trademark_sub
     *
     * @yougougenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by YouGou MyBatis Generator.
     * This field corresponds to the database table tbl_sp_supplier_contract_trademark_sub
     *
     * @yougougenerated
     */
    protected String oderProperty;

    /**
     * This field was generated by YouGou MyBatis Generator.
     * This field corresponds to the database table tbl_sp_supplier_contract_trademark_sub
     *
     * @yougougenerated
     */
    protected String oderType;

    /**
     * This field was generated by YouGou MyBatis Generator.
     * This field corresponds to the database table tbl_sp_supplier_contract_trademark_sub
     *
     * @yougougenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by YouGou MyBatis Generator.
     * This field corresponds to the database table tbl_sp_supplier_contract_trademark_sub
     *
     * @yougougenerated
     */
    protected List<Criteria> oredCriteria;

    public ContractTradeMarkSubQuery() {
        oredCriteria = new ArrayList<Criteria>();
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    public String getOrderByClause() {
        if (StringUtils.isEmpty(orderByClause) && StringUtils.isNotEmpty(this.getOderProperty()) && StringUtils.isNotEmpty(this.getOderType())){
            return MessageFormat.format("{0} {1}", this.getOderProperty(),this.getOderType());
        }
        return orderByClause;
    }

    public void setOderProperty(String oderProperty) {
        this.oderProperty = oderProperty;
    }

    public String getOderProperty() {
        return oderProperty;
    }

    public void setOderType(String oderType) {
        this.oderType = oderType;
    }

    public String getOderType() {
        return oderType;
    }

    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    public boolean isDistinct() {
        return distinct;
    }

    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by YouGou MyBatis Generator.
     * This class corresponds to the database table tbl_sp_supplier_contract_trademark_sub
     *
     * @yougougenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public Criteria setLimitValue(int value1, int value2) {
            if (value2 == 0 )
              throw new RuntimeException("value2 is 0");
            addCriterion("limit",value1,value2,"null");
            return (Criteria) this;
        }

        public Criteria getLimitValue() {
            return (Criteria)criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value, property));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andContractIdIsNull() {
            addCriterion("contract_id is null");
            return (Criteria) this;
        }

        public Criteria andContractIdIsNotNull() {
            addCriterion("contract_id is not null");
            return (Criteria) this;
        }

        public Criteria andContractIdEqualTo(String value) {
            addCriterion("contract_id =", value, "contractId");
            return (Criteria) this;
        }

        public Criteria andContractIdNotEqualTo(String value) {
            addCriterion("contract_id <>", value, "contractId");
            return (Criteria) this;
        }

        public Criteria andContractIdGreaterThan(String value) {
            addCriterion("contract_id >", value, "contractId");
            return (Criteria) this;
        }

        public Criteria andContractIdGreaterThanOrEqualTo(String value) {
            addCriterion("contract_id >=", value, "contractId");
            return (Criteria) this;
        }

        public Criteria andContractIdLessThan(String value) {
            addCriterion("contract_id <", value, "contractId");
            return (Criteria) this;
        }

        public Criteria andContractIdLessThanOrEqualTo(String value) {
            addCriterion("contract_id <=", value, "contractId");
            return (Criteria) this;
        }

        public Criteria andContractIdLike(String value) {
            addCriterion("contract_id like", value, "contractId");
            return (Criteria) this;
        }

        public Criteria andContractIdNotLike(String value) {
            addCriterion("contract_id not like", value, "contractId");
            return (Criteria) this;
        }

        public Criteria andContractIdIn(List<String> values) {
            addCriterion("contract_id in", values, "contractId");
            return (Criteria) this;
        }

        public Criteria andContractIdNotIn(List<String> values) {
            addCriterion("contract_id not in", values, "contractId");
            return (Criteria) this;
        }

        public Criteria andContractIdBetween(String value1, String value2) {
            addCriterion("contract_id between", value1, value2, "contractId");
            return (Criteria) this;
        }

        public Criteria andContractIdNotBetween(String value1, String value2) {
            addCriterion("contract_id not between", value1, value2, "contractId");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdIsNull() {
            addCriterion("trademark_id is null");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdIsNotNull() {
            addCriterion("trademark_id is not null");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdEqualTo(String value) {
            addCriterion("trademark_id =", value, "trademarkId");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdNotEqualTo(String value) {
            addCriterion("trademark_id <>", value, "trademarkId");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdGreaterThan(String value) {
            addCriterion("trademark_id >", value, "trademarkId");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdGreaterThanOrEqualTo(String value) {
            addCriterion("trademark_id >=", value, "trademarkId");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdLessThan(String value) {
            addCriterion("trademark_id <", value, "trademarkId");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdLessThanOrEqualTo(String value) {
            addCriterion("trademark_id <=", value, "trademarkId");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdLike(String value) {
            addCriterion("trademark_id like", value, "trademarkId");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdNotLike(String value) {
            addCriterion("trademark_id not like", value, "trademarkId");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdIn(List<String> values) {
            addCriterion("trademark_id in", values, "trademarkId");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdNotIn(List<String> values) {
            addCriterion("trademark_id not in", values, "trademarkId");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdBetween(String value1, String value2) {
            addCriterion("trademark_id between", value1, value2, "trademarkId");
            return (Criteria) this;
        }

        public Criteria andTrademarkIdNotBetween(String value1, String value2) {
            addCriterion("trademark_id not between", value1, value2, "trademarkId");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerIsNull() {
            addCriterion("be_authorizer is null");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerIsNotNull() {
            addCriterion("be_authorizer is not null");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerEqualTo(String value) {
            addCriterion("be_authorizer =", value, "beAuthorizer");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerNotEqualTo(String value) {
            addCriterion("be_authorizer <>", value, "beAuthorizer");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerGreaterThan(String value) {
            addCriterion("be_authorizer >", value, "beAuthorizer");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerGreaterThanOrEqualTo(String value) {
            addCriterion("be_authorizer >=", value, "beAuthorizer");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerLessThan(String value) {
            addCriterion("be_authorizer <", value, "beAuthorizer");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerLessThanOrEqualTo(String value) {
            addCriterion("be_authorizer <=", value, "beAuthorizer");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerLike(String value) {
            addCriterion("be_authorizer like", value, "beAuthorizer");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerNotLike(String value) {
            addCriterion("be_authorizer not like", value, "beAuthorizer");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerIn(List<String> values) {
            addCriterion("be_authorizer in", values, "beAuthorizer");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerNotIn(List<String> values) {
            addCriterion("be_authorizer not in", values, "beAuthorizer");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerBetween(String value1, String value2) {
            addCriterion("be_authorizer between", value1, value2, "beAuthorizer");
            return (Criteria) this;
        }

        public Criteria andBeAuthorizerNotBetween(String value1, String value2) {
            addCriterion("be_authorizer not between", value1, value2, "beAuthorizer");
            return (Criteria) this;
        }

        public Criteria andLevelIsNull() {
            addCriterion("level is null");
            return (Criteria) this;
        }

        public Criteria andLevelIsNotNull() {
            addCriterion("level is not null");
            return (Criteria) this;
        }

        public Criteria andLevelEqualTo(Integer value) {
            addCriterion("level =", value, "level");
            return (Criteria) this;
        }

        public Criteria andLevelNotEqualTo(Integer value) {
            addCriterion("level <>", value, "level");
            return (Criteria) this;
        }

        public Criteria andLevelGreaterThan(Integer value) {
            addCriterion("level >", value, "level");
            return (Criteria) this;
        }

        public Criteria andLevelGreaterThanOrEqualTo(Integer value) {
            addCriterion("level >=", value, "level");
            return (Criteria) this;
        }

        public Criteria andLevelLessThan(Integer value) {
            addCriterion("level <", value, "level");
            return (Criteria) this;
        }

        public Criteria andLevelLessThanOrEqualTo(Integer value) {
            addCriterion("level <=", value, "level");
            return (Criteria) this;
        }

        public Criteria andLevelIn(List<Integer> values) {
            addCriterion("level in", values, "level");
            return (Criteria) this;
        }

        public Criteria andLevelNotIn(List<Integer> values) {
            addCriterion("level not in", values, "level");
            return (Criteria) this;
        }

        public Criteria andLevelBetween(Integer value1, Integer value2) {
            addCriterion("level between", value1, value2, "level");
            return (Criteria) this;
        }

        public Criteria andLevelNotBetween(Integer value1, Integer value2) {
            addCriterion("level not between", value1, value2, "level");
            return (Criteria) this;
        }

        public Criteria andAuthorizStartdateIsNull() {
            addCriterion("authoriz_startdate is null");
            return (Criteria) this;
        }

        public Criteria andAuthorizStartdateIsNotNull() {
            addCriterion("authoriz_startdate is not null");
            return (Criteria) this;
        }

        public Criteria andAuthorizStartdateEqualTo(Date value) {
            addCriterionForJDBCDate("authoriz_startdate =", value, "authorizStartdate");
            return (Criteria) this;
        }

        public Criteria andAuthorizStartdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("authoriz_startdate <>", value, "authorizStartdate");
            return (Criteria) this;
        }

        public Criteria andAuthorizStartdateGreaterThan(Date value) {
            addCriterionForJDBCDate("authoriz_startdate >", value, "authorizStartdate");
            return (Criteria) this;
        }

        public Criteria andAuthorizStartdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("authoriz_startdate >=", value, "authorizStartdate");
            return (Criteria) this;
        }

        public Criteria andAuthorizStartdateLessThan(Date value) {
            addCriterionForJDBCDate("authoriz_startdate <", value, "authorizStartdate");
            return (Criteria) this;
        }

        public Criteria andAuthorizStartdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("authoriz_startdate <=", value, "authorizStartdate");
            return (Criteria) this;
        }

        public Criteria andAuthorizStartdateIn(List<Date> values) {
            addCriterionForJDBCDate("authoriz_startdate in", values, "authorizStartdate");
            return (Criteria) this;
        }

        public Criteria andAuthorizStartdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("authoriz_startdate not in", values, "authorizStartdate");
            return (Criteria) this;
        }

        public Criteria andAuthorizStartdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("authoriz_startdate between", value1, value2, "authorizStartdate");
            return (Criteria) this;
        }

        public Criteria andAuthorizStartdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("authoriz_startdate not between", value1, value2, "authorizStartdate");
            return (Criteria) this;
        }

        public Criteria andAuthorizEnddateIsNull() {
            addCriterion("authoriz_enddate is null");
            return (Criteria) this;
        }

        public Criteria andAuthorizEnddateIsNotNull() {
            addCriterion("authoriz_enddate is not null");
            return (Criteria) this;
        }

        public Criteria andAuthorizEnddateEqualTo(Date value) {
            addCriterionForJDBCDate("authoriz_enddate =", value, "authorizEnddate");
            return (Criteria) this;
        }

        public Criteria andAuthorizEnddateNotEqualTo(Date value) {
            addCriterionForJDBCDate("authoriz_enddate <>", value, "authorizEnddate");
            return (Criteria) this;
        }

        public Criteria andAuthorizEnddateGreaterThan(Date value) {
            addCriterionForJDBCDate("authoriz_enddate >", value, "authorizEnddate");
            return (Criteria) this;
        }

        public Criteria andAuthorizEnddateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("authoriz_enddate >=", value, "authorizEnddate");
            return (Criteria) this;
        }

        public Criteria andAuthorizEnddateLessThan(Date value) {
            addCriterionForJDBCDate("authoriz_enddate <", value, "authorizEnddate");
            return (Criteria) this;
        }

        public Criteria andAuthorizEnddateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("authoriz_enddate <=", value, "authorizEnddate");
            return (Criteria) this;
        }

        public Criteria andAuthorizEnddateIn(List<Date> values) {
            addCriterionForJDBCDate("authoriz_enddate in", values, "authorizEnddate");
            return (Criteria) this;
        }

        public Criteria andAuthorizEnddateNotIn(List<Date> values) {
            addCriterionForJDBCDate("authoriz_enddate not in", values, "authorizEnddate");
            return (Criteria) this;
        }

        public Criteria andAuthorizEnddateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("authoriz_enddate between", value1, value2, "authorizEnddate");
            return (Criteria) this;
        }

        public Criteria andAuthorizEnddateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("authoriz_enddate not between", value1, value2, "authorizEnddate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by YouGou MyBatis Generator.
     * This class corresponds to the database table tbl_sp_supplier_contract_trademark_sub
     *
     * @yougougenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by YouGou MyBatis Generator.
     * This class corresponds to the database table tbl_sp_supplier_contract_trademark_sub
     *
     * @yougougenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean limitValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isLimitValue() {
            return limitValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            if("limit".equals(condition))
              this.limitValue = true;
            else
              this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}