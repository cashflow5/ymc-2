<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yougou.kaidian.user.dao.SupplierLinkManMapper" >
  <resultMap id="BaseResultMap" type="com.yougou.kaidian.user.model.pojo.SupplierLinkMan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="supply_id" property="supplierId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="tele_phone" property="telePhone" jdbcType="VARCHAR" />
    <result column="mobile_phone" property="mobilePhone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
  </resultMap>
 
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, supply_id, type, contact, tele_phone,mobile_phone,email,fax,address
  </sql>
 
  <select id="getSupplierLinkManById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tbl_sp_supplier_contact
    where id = #{id} 
  </select>
  <select id="getSupplierLinkManList" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from tbl_sp_supplier_contact 
    where supply_id = #{value} 
  </select>
  
 <!-- 总记录数 -->
	<select id="getLinkManCounts" parameterType="java.lang.String" resultType="int">
		  select count(1) from tbl_sp_supplier_contact where supply_id = #{supplierId} 
	</select>
	
	 <!-- 添加 判断手机号码是否存在 -->
	<select id="exitsTelePhone" parameterType="com.yougou.kaidian.user.model.vo.SupplierlinkManVo" resultType="int">
		  select count(1) from tbl_sp_supplier_contact where mobile_phone = #{newPhone} and supply_id=#{supplilyId}
	</select>
	
	 <!--修改 判断手机号码是否存在 -->
	<select id="exitsNewPhone" parameterType="com.yougou.kaidian.user.model.vo.SupplierlinkManVo" resultType="int">
		 SELECT COUNT(1) FROM tbl_sp_supplier_contact WHERE mobile_phone=#{newPhone}
		   AND mobile_phone!=#{oldPhone} and supply_id=#{supplilyId}
	</select>
	
	 <!-- 判断email是否存在 -->
	<select id="exitsEmail" parameterType="java.lang.String" resultType="int">
		  select count(1) from tbl_sp_supplier_contact where email = #{value} 
	</select>
	
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tbl_sp_supplier_contact
    where supply_id = #{id,jdbcType=VARCHAR}
  </delete>
   <insert id="add_linkMan" parameterType="com.yougou.kaidian.user.model.pojo.SupplierLinkMan">
      insert into tbl_sp_supplier_contact (id, supply_id, type, 
      contact, tele_phone, mobile_phone,email,fax,address)
      values (#{id,jdbcType=VARCHAR}, #{supplierId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{contact,jdbcType=VARCHAR}, #{telePhone,jdbcType=VARCHAR}, #{mobilePhone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR})
  </insert>
  <update id="update_linkMan" parameterType="com.yougou.kaidian.user.model.pojo.SupplierLinkMan">
      update tbl_sp_supplier_contact 
      set supply_id = #{supplierId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      contact = #{contact,jdbcType=VARCHAR},
      tele_phone = #{telePhone,jdbcType=VARCHAR},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR}
       where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>