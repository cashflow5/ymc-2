<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jee  http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-lazy-init="true">
    <!-- 启动对@AspectJ注解的支持 -->  
    <context:component-scan base-package="aop.annotation" />
    <aop:aspectj-autoproxy />

	<!-- 开启注解 -->
	<context:annotation-config />

	<!-- 使用annotation 自动注册bean -->
	<context:component-scan base-package="com.yougou">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 定义受环境影响易变的变量 -->
	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<!-- 禁止调整加载顺序(注：系统以list最后一个有效的value元素为准) -->
			<list>
				<!-- 本地开发环境配置 -->
				<value>classpath:*.properties</value>
				<!-- 服务器生产环境配置 -->
				<value>file:/etc/yougouconf/*.properties</value>
			</list>
		</property>
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="properties" ref="configProperties" />
    </bean>

	<bean id="masterDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">  
        <property name="jndiName" value="java:comp/env/MySqlDSYmcM"/>  
    </bean> 
	<bean id="slaveDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">  
        <property name="jndiName" value="java:comp/env/MySqlDSYmcS"/>  
    </bean> 
    
    <!-- 数据 报表数据源 -->
    <bean id="reportDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">  
        <property name="jndiName" value="java:comp/env/MySqlDSYmcReport"/>  
    </bean> 
	
	<bean id="dataSource" class="com.yougou.kaidian.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="slave" value-ref="slaveDataSource" />
				<entry key="master" value-ref="masterDataSource" />
				<entry key="report" value-ref="reportDataSource" /> 
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="slaveDataSource" />
	</bean>

	<!-- JDBC 据源事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:com/yougou/kaidian/*/dao/mapper/*.xml" />
		<property name="typeAliasesPackage">
			<value>
				com.yougou.kaidian.order.model;
			</value>
		</property>
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- property name="sqlSessionFactory" ref="sqlSessionFactory" / -->
		<property name="basePackage" value="com.yougou.kaidian.*.dao" />
	</bean>

	<!--缓存管理 -->
	<bean id="cacheManager" class="com.alisoft.xplatform.asf.cache.memcached.MemcachedCacheManager" init-method="start">
		<property name="configFile" value="memcached_cluster.xml" />
	</bean>

	<!-- 通过BeanFactoryAware，手动从spring容器获取bean -->
	<bean class="com.yougou.tools.common.utils.SpringContextHolder" lazy-init="false"/>
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="32"></property>
		<property name="maxIdle" value="6"></property>
		<property name="maxWait" value="1000"></property>
		<property name="testOnBorrow" value="false"></property>
	</bean>
	
	<!-- Jedis ConnectionFactory -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" p:host-name="${redis.host}" p:port="${redis.port}">
		<property name="poolConfig" ref="jedisPoolConfig"></property>
	</bean>

	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
	
    <!-- redis template definition -->
	<bean id="redisTemplate" name="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory">
	    <property name="keySerializer" ref="stringRedisSerializer"/>
	    <property name="hashKeySerializer" ref="stringRedisSerializer"/>
	</bean>
	
	<!-- 版式设置静态页redis 配置参数 -->
	<bean id="jedisHtmlPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="300"></property>
		<property name="maxIdle" value="50"></property>
		<property name="maxWait" value="1000"></property>
		<property name="testOnBorrow" value="false"></property>
	</bean>
	
	<!-- Jedis ConnectionFactory layoutset  -->
	<bean id="jedisHtmlConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redisHtml.host}" p:port="${redisHtml.port}" p:timeout="5000"
		p:use-pool="true" p:poolConfig-ref="jedisHtmlPoolConfig" />
		
	<!-- redis template definition layoutset -->
	<bean id="redisHtmlTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisHtmlConnectionFactory">
		<property name="keySerializer" ref="stringRedisSerializer" />
		<property name="valueSerializer" ref="stringRedisSerializer" />
		<property name="hashKeySerializer" ref="stringRedisSerializer" />
	</bean>	
	
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" p:connection-factory-ref="jedisConnectionFactory"/>

	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="3" />
		<property name="keepAliveSeconds" value="200" />
		<property name="maxPoolSize" value="5" />
		<property name="queueCapacity" value="25" />
	</bean>
	
	<!-- 提醒邮件发送方 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>smtp.163.com</value>
		</property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
			</props>
		</property>
		<property name="username">
			<value>yougou_kaidian@163.com</value>
		</property>
		<property name="password">
			<value>1q2w3e</value>
		</property>
	</bean>
	
	<bean class="com.yougou.imago.client.ZookeeperConfiguration">
		<constructor-arg index="0" value="${dubbo.registry.address}"/>
		<constructor-arg index="1" value="Merchant"/>
	</bean>
	
	<!-- 读取本地一些常用配置和变量-->
	<bean id="localConfig" class="com.yougou.kaidian.framework.util.LocalConfigBean">
		<property name="receiveMailAddress">
			<list>  
		       <!--  <value>li.m1@yougou.com</value>  
		        <value>liang.yx@yougou.com</value>  
		        <value>li.n3@yougou.com</value> --> 
		        <value>luo.q@yougou.com</value>		     
		        <value>zhang.f@yougou.com</value>
		        <value>li.j1@yougou.com</value>
		        <value>wu.y1@yougou.com</value>
		        <value>zhang.wj1@yougou.com</value>
           </list>  
		</property>
	</bean>
</beans>