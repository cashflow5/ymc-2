# The mongo host
yougou.mongo.host=10.0.30.164

# The mongo host port
yougou.mongo.port=27017

# The mongo db name
yougou.mongo.dbName=yitian_b2c_db

# The mongo db user name
yougou.mongo.userName=yougou

# The mongo db passwd
yougou.mongo.passwd=yogoo_123_abc

# If true, the driver will keep trying to connect to the same server in case that the socket cannot be established. There is maximum amount of time to keep retrying, which is 15s by default. This can be useful to avoid some exceptions being thrown when a server is down temporarily by blocking the operations. It also can be useful to smooth the transition to a new master (so that a new master is elected within the retry time). Note that when using this flag: - for a replica set, the driver will trying to connect to the old master for that time, instead of failing over to the new one right away - this does not prevent exception from being thrown in read/write operations on the socket, which must be handled by application Even if this flag is false, the driver already has mechanisms to automatically recreate broken connections and retry the read operations. Default is false. 
yougou.mongo.options.autoConnectRetry=true

# The connection timeout in milliseconds. It is used solely when establishing a new connection Socket.connect(java.net.SocketAddress, int) Default is 0 and means no timeout. 
yougou.mongo.options.connectTimeout=3000

# The maximum number of connections allowed per host for this Mongo instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. Default is 10. 
yougou.mongo.options.connectionsPerHost=20

# The maximum amount of time in MS to spend retrying to open connection to the same server. Default is 0, which means to use the default 15s if autoConnectRetry is on. 
yougou.mongo.options.maxAutoConnectRetryTime=0

# The maximum wait time in ms that a thread may wait for a connection to become available. Default is 120,000. 
yougou.mongo.options.maxWaitTime=12000

# Deprecated. Replaced in MongoDB 2.0/Java Driver 2.7 with ReadPreference.SECONDARY This flag specifies if the driver is allowed to read from secondary (slave) servers. Specifically in the current implementation, the driver will avoid reading from the primary server and round robin requests to secondaries. Driver also factors in the latency to secondaries when choosing a server. Note that reading from secondaries can increase performance and reliability, but it may result in temporary inconsistent results. Default is false. 
yougou.mongo.options.slaveOk=false

# This flag controls the socket keep alive feature that keeps a connection alive through firewalls 
yougou.mongo.options.socketKeepAlive=false

# The socket timeout in milliseconds It is used for I/O socket read and write operations Socket.setSoTimeout(int) Default is 0 and means no timeout. 
yougou.mongo.options.socketTimeout=3000

# this multiplier, multiplied with the connectionsPerHost setting, gives the maximum number of threads that may be waiting for a connection to become available from the pool. All further threads will get an exception right away. For example if connectionsPerHost is 10 and threadsAllowedToBlockForConnectionMultiplier is 5, then up to 50 threads can wait for a connection. Default is 5. 
yougou.mongo.options.threadsAllowedToBlockForConnectionMultiplier=5

# The "fsync" value of the global WriteConcern. Default is false. 
yougou.mongo.options.fsync=true

# The "wnumber" value of the global WriteConcern. Default is 0. 
yougou.mongo.options.wnumber=1

# The "wtimeout" value of the global WriteConcern. Default is 0. 
yougou.mongo.options.wtimeout=0