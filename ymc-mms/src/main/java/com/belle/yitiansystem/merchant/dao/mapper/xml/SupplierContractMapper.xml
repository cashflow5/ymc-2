<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.belle.yitiansystem.merchant.dao.mapper.SupplierContractMapper" >
	<!-- 合同 -->
	<resultMap id="supplierContractMap" type="com.belle.yitiansystem.merchant.model.pojo.SupplierContract">
   <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="supplier_id" property="supplierId" jdbcType="VARCHAR" />
    <result column="contract_no" property="contractNo" jdbcType="VARCHAR" />
    <result column="clearing_form" property="clearingForm" jdbcType="SMALLINT" />
    <result column="effective_date" property="effectiveDate" jdbcType="DATE" />
    <result column="failure_date" property="failureDate" jdbcType="DATE" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="attachment" property="attachment" jdbcType="VARCHAR" />
    <result column="declarant" property="declarant" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="bind_status" property="bindStatus" jdbcType="CHAR" />
    <result column="supplier" property="supplier" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="mark_remaining_days" property="markRemainingDays" jdbcType="INTEGER" />
    <result column="contract_remaining_days" property="contractRemainingDays" jdbcType="INTEGER" />
    <result column="is_Need_Renew" property="isNeedRenew" jdbcType="CHAR" />
    <result column="is_Use_ERP" property="isUseERP" jdbcType="CHAR" />
    <result column="is_Need_Deposit" property="isNeedDeposit" jdbcType="CHAR" />
    <result column="is_need_use_fee" property="isNeedUseFee" jdbcType="CHAR" />
    <result column="deposit" property="deposit" jdbcType="DECIMAL" />
    <result column="use_fee" property="useFee" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="bank_owner" property="bankOwner" jdbcType="VARCHAR" />
    <result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
    <result column="bank_province" property="bankProvince" jdbcType="VARCHAR" />
    <result column="bank_city" property="bankCity" jdbcType="VARCHAR" />
    <result column="bank_area" property="bankArea" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="parent_contract_id" property="parentContractId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="pre_deposit" property="preDeposit" jdbcType="DECIMAL" />
    <result column="pre_useFee" property="preUsefee" jdbcType="DECIMAL" />
    <result column="is_Transfer_Deposit" property="isTransferDeposit" jdbcType="CHAR" />
    <result column="renew_flag" property="renewFlag" jdbcType="CHAR" />
    <result column="supplier_type" jdbcType="CHAR" property="supplierType" />
    <result column="supplier_code" jdbcType="CHAR" property="supplierCode" />
    <result column="is_old" jdbcType="CHAR" property="isOld" />
    <result column="deposit_status" property="depositStatus" jdbcType="CHAR" />
    <result column="use_fee_status" property="useFeeStatus" jdbcType="CHAR" />
	</resultMap>
	
	<sql id="Base_Column_List" >
    <!--
      WARNING - @yougougenerated
      This element is automatically generated by YouGou MyBatis Generator, do not modify.
    -->
    id, supplier_id, contract_no, clearing_form, effective_date, failure_date, update_time, 
    update_user, attachment, declarant, create_time, bind_status, supplier, create_user, 
    mark_remaining_days, contract_remaining_days, is_Need_Renew, is_Use_ERP, is_Need_Deposit, 
    is_need_use_fee, deposit, use_fee, remark, bank_owner, bank_account, bank_province, 
    bank_city, bank_area, bank_name, parent_contract_id, status, pre_deposit, pre_useFee, 
    is_Transfer_Deposit, renew_flag, deposit_status, use_fee_status
    </sql>
    
    <select id="getContractOverDayNumList" resultMap="simple_contract">
    
    	<![CDATA[ 
			select distinct s.id as supplier_id,s.supplier_code as merchant_code  from tbl_sp_supplier s
			where s.id in (
			select c.supplier_id from tbl_sp_supplier_contract c where c.renew_flag ='1' 
			and c.failure_date>= #{compareDateFrom,jdbcType=DATE}
			and c.failure_date<= #{compareDateTo,jdbcType=DATE}
			
			)  AND s.delete_flag = 1
		]]> 
    	
    </select>
  
	<insert id="insertSupplierContract" parameterType="com.belle.yitiansystem.merchant.model.pojo.SupplierContract">
		 insert into tbl_sp_supplier_contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="supplierId != null  and supplierId!=''" >
        supplier_id,
      </if>
      <if test="contractNo != null and contractNo!=''" >
        contract_no,
      </if>
      <if test="clearingForm != null" >
        clearing_form,
      </if>
      <if test="effectiveDate != null and effectiveDate != ''" >
        effective_date,
      </if>
      <if test="failureDate != null and failureDate != ''" >
        failure_date,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null and updateUser != ''" >
        update_user,
      </if>
      <if test="attachment != null and attachment != ''" >
        attachment,
      </if>
      <if test="declarant != null and declarant != ''" >
        declarant,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="bindStatus != null " >
        bind_status,
      </if>
      <if test="supplier != null and supplier != ''" >
        supplier,
      </if>
      <if test="createUser != null and createUser != ''" >
        create_user,
      </if>
      <if test="markRemainingDays != null" >
        mark_remaining_days,
      </if>
      <if test="contractRemainingDays != null" >
        contract_remaining_days,
      </if>
      <if test="isNeedRenew != null and  isNeedRenew!= ''" >
        is_Need_Renew,
      </if>
      <if test="isUseERP != null and isUseERP != ''" >
        is_Use_ERP,
      </if>
      <if test="isNeedDeposit != null and isNeedDeposit != ''" >
        is_Need_Deposit,
      </if>
      <if test="isNeedUseFee != null and  isNeedUseFee!= ''" >
        is_need_use_fee,
      </if>
      <if test="deposit != null" >
        deposit,
      </if>
      <if test="useFee != null" >
        use_fee,
      </if>
      <if test="remark != null and remark != ''" >
        remark,
      </if>
      <if test="bankOwner != null and bankOwner != ''" >
        bank_owner,
      </if>
      <if test="bankAccount != null and bankAccount != ''" >
        bank_account,
      </if>
      <if test="bankProvince != null and  bankProvince!= ''" >
        bank_province,
      </if>
      <if test="bankCity != null and bankCity != ''" >
        bank_city,
      </if>
      <if test="bankArea != null and bankArea != ''" >
        bank_area,
      </if>
      <if test="bankName != null and bankName != ''" >
        bank_name,
      </if>
      <if test="parentContractId != null and parentContractId != ''" >
        parent_contract_id,
      </if>
      <if test="status != null and status != ''" >
        status,
      </if>
      <if test="preDeposit != null" >
        pre_deposit,
      </if>
      <if test="preUsefee != null" >
        pre_useFee,
      </if>
      <if test="isTransferDeposit != null and isTransferDeposit != ''" >
        is_Transfer_Deposit,
      </if>
      <if test="renewFlag != null and  renewFlag!= ''" >
        renew_flag,
      </if>
      <if test="depositStatus != null and  depositStatus!= ''" >
        deposit_status,
      </if>
      <if test="useFeeStatus != null and  useFeeStatus!= ''" >
        use_fee_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null  and supplierId!=''" >
        #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="contractNo != null and contractNo!=''" >
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="clearingForm != null" >
        #{clearingForm,jdbcType=SMALLINT},
      </if>
      <if test="effectiveDate != null and effectiveDate != ''" >
        #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="failureDate != null and failureDate != ''" >
        #{failureDate,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null and updateUser != ''" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null and attachment != ''" >
        #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="declarant != null and declarant != ''" >
        #{declarant,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bindStatus != null" >
        #{bindStatus,jdbcType=CHAR},
      </if>
      <if test="supplier != null and supplier != ''" >
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null and createUser != ''" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="markRemainingDays != null" >
        #{markRemainingDays,jdbcType=INTEGER},
      </if>
      <if test="contractRemainingDays != null" >
        #{contractRemainingDays,jdbcType=INTEGER},
      </if>
      <if test="isNeedRenew != null and  isNeedRenew!= ''" >
        #{isNeedRenew,jdbcType=CHAR},
      </if>
      <if test="isUseERP != null and isUseERP != ''" >
        #{isUseERP,jdbcType=CHAR},
      </if>
      <if test="isNeedDeposit != null and isNeedDeposit != ''" >
        #{isNeedDeposit,jdbcType=CHAR},
      </if>
      <if test="isNeedUseFee != null and  isNeedUseFee!= ''" >
        #{isNeedUseFee,jdbcType=CHAR},
      </if>
      <if test="deposit != null" >
        #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="useFee != null" >
        #{useFee,jdbcType=DECIMAL},
      </if>
      <if test="remark != null and remark != ''" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="bankOwner != null and bankOwner != ''" >
        #{bankOwner,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null and bankAccount != ''" >
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankProvince != null and  bankProvince!= ''" >
        #{bankProvince,jdbcType=VARCHAR},
      </if>
      <if test="bankCity != null and bankCity != ''" >
        #{bankCity,jdbcType=VARCHAR},
      </if>
      <if test="bankArea != null and bankArea != ''" >
        #{bankArea,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null and bankName != ''" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="parentContractId != null and parentContractId != ''" >
        #{parentContractId,jdbcType=VARCHAR},
      </if>
      <if test="status != null and status != ''" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="preDeposit != null" >
        #{preDeposit,jdbcType=DECIMAL},
      </if>
      <if test="preUsefee != null" >
        #{preUsefee,jdbcType=DECIMAL},
      </if>
      <if test="isTransferDeposit != null and isTransferDeposit != ''" >
        #{isTransferDeposit,jdbcType=CHAR},
      </if>
      <if test="renewFlag != null and  renewFlag!= ''" >
        #{renewFlag,jdbcType=CHAR},
      </if>
      <if test="depositStatus != null and  depositStatus!= ''" >
        #{depositStatus,jdbcType=CHAR},
      </if>
      <if test="useFeeStatus != null and  useFeeStatus!= ''" >
        #{useFeeStatus,jdbcType=CHAR},
      </if>
    </trim>
	</insert>
	
	<resultMap id="simple_contract" type="com.belle.yitiansystem.merchant.model.entity.SimpleContract">
	   <result column="contract_no" jdbcType="VARCHAR" property="contractNo" />
	   <result column="merchant_code" jdbcType="VARCHAR" property="merchantCode" />
	   
	   <result column="supplier_id" jdbcType="VARCHAR" property="supplierId" />
	   <result column="renew_flag" jdbcType="VARCHAR" property="renewFlag" />
	   <result column="old_contract" jdbcType="VARCHAR" property="oldContract" />
	   <result column="new_contract" jdbcType="VARCHAR" property="newContract" />
	   <result column="leftdays" jdbcType="INTEGER" property="leftdays" />
	   
	   <result column="email" jdbcType="VARCHAR" property="email" />
	   <result column="contract_remaining_days" jdbcType="INTEGER" property="contractRemainingDays" />
	</resultMap>
	
	  <!--查询未使用  财务审核通过的合同-->
  <select id="getNotNowContract" resultMap="simple_contract">
        <![CDATA[ 
       SELECT
			c.id,
			c.contract_no new_contract,
			e.contract_no old_contract,
			c.renew_flag,
			c.supplier_id,
			e.contract_remaining_days,
			DATEDIFF(c.failure_date, CURDATE())leftdays
		FROM
			tbl_sp_supplier_contract c,
			tbl_merchant_supplier_expand e
		WHERE
			c.supplier_id = e.supplier_id
		AND c.renew_flag = 3
		AND c. STATUS = 5
		AND DATEDIFF(c.effective_date, CURDATE())< 1
		
        ]]>  
  </select> 
   <select id="selectSimpleContract" resultMap="simple_contract">
	    <![CDATA[ 
		   SELECT
				e.merchant_code,
				e.contract_remaining_days,
				e.contract_no,
				u.email
			FROM
				tbl_merchant_supplier_expand e,
				tbl_merchant_user u,
				tbl_sp_supplier s
			WHERE
				u.merchant_code = e.merchant_code
			AND s.id = e.supplier_id
			AND(
				contract_no IS NOT NULL
				AND contract_no != ''
			)
			AND s.delete_flag = 1
			AND s.is_valid = 1
			AND(
				contract_remaining_days <= - 75
				AND contract_remaining_days >= - 90
			);
         ]]>  
	</select>
	
	
	
     <update id="updateSupplierContract" parameterType="com.belle.yitiansystem.merchant.model.pojo.SupplierContract">
		  update tbl_sp_supplier_contract
    <set >
      <if test="supplierId != null  and supplierId!=''" >
        supplier_id = #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="contractNo != null and contractNo!=''" >
        contract_no = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="clearingForm != null" >
        clearing_form = #{clearingForm,jdbcType=SMALLINT},
      </if>
      <if test="effectiveDate != null and effectiveDate != ''" >
        effective_date = #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="failureDate != null and failureDate != ''" >
        failure_date = #{failureDate,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null and updateUser != ''" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null and attachment != ''" >
        attachment = #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="declarant != null and declarant != ''" >
        declarant = #{declarant,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bindStatus != null" >
        bind_status = #{bindStatus,jdbcType=CHAR},
      </if>
      <if test="supplier != null and supplier != ''" >
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null and createUser != ''" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="markRemainingDays != null" >
        mark_remaining_days = #{markRemainingDays,jdbcType=INTEGER},
      </if>
      <if test="contractRemainingDays != null" >
        contract_remaining_days = #{contractRemainingDays,jdbcType=INTEGER},
      </if>
      <if test="isNeedRenew != null and  isNeedRenew!= ''" >
        is_Need_Renew = #{isNeedRenew,jdbcType=CHAR},
      </if>
      <if test="isUseERP != null and isUseERP != ''" >
        is_Use_ERP = #{isUseERP,jdbcType=CHAR},
      </if>
      <if test="isNeedDeposit != null and isNeedDeposit != ''" >
        is_Need_Deposit = #{isNeedDeposit,jdbcType=CHAR},
      </if>
      <if test="isNeedUseFee != null and  isNeedUseFee!= ''" >
        is_need_use_fee = #{isNeedUseFee,jdbcType=CHAR},
      </if>
      <if test="deposit != null" >
        deposit = #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="useFee != null" >
        use_fee = #{useFee,jdbcType=DECIMAL},
      </if>
      <if test="remark != null and remark != ''" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="bankOwner != null and bankOwner != ''" >
        bank_owner = #{bankOwner,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null and bankAccount != ''" >
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankProvince != null and  bankProvince!= ''" >
        bank_province = #{bankProvince,jdbcType=VARCHAR},
      </if>
      <if test="bankCity != null and bankCity != ''" >
        bank_city = #{bankCity,jdbcType=VARCHAR},
      </if>
      <if test="bankArea != null and bankArea != ''" >
        bank_area = #{bankArea,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null and bankName != ''" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="parentContractId != null" >
        parent_contract_id = #{parentContractId,jdbcType=VARCHAR},
      </if>
      <if test="status != null and status != ''" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="preDeposit != null" >
        pre_deposit = #{preDeposit,jdbcType=DECIMAL},
      </if>
      <if test="preUsefee != null" >
        pre_useFee = #{preUsefee,jdbcType=DECIMAL},
      </if>
      <if test="isTransferDeposit != null and isTransferDeposit != ''" >
        is_Transfer_Deposit = #{isTransferDeposit,jdbcType=CHAR},
      </if>
      <if test="renewFlag != null and  renewFlag!= ''" >
        renew_flag = #{renewFlag,jdbcType=CHAR},
      </if>  
      <if test="depositStatus != null and  depositStatus!= ''" >
        deposit_status = #{depositStatus,jdbcType=CHAR},
      </if>
      <if test="useFeeStatus != null and  useFeeStatus!= ''" >
        use_fee_status = #{useFeeStatus,jdbcType=CHAR}
      </if>    
    </set>
    where id = #{id,jdbcType=VARCHAR}
	</update>
	
	<sql id="sql_conditon">
		<if test="param != null">
			<if test="param.supplierName!=null and ''!=param.supplierName">
				and s.supplier like '%${param.supplierName}%'
			</if>
			<if test="param.supplierCode!=null and ''!=param.supplierCode">
				and s.supplier_code = #{param.supplierCode}
			</if>
			<if test="param.contractNo!=null and ''!=param.contractNo">
				and t.contract_no = #{param.contractNo}
			</if>
			<if test="param.declarant!=null and ''!=param.declarant">
				and t.declarant like '%${param.declarant}%'
			</if>
			<if test="param.effectiveDateStart!=null and ''!=param.effectiveDateStart">
				<![CDATA[
	        		and t.effective_date >= '${param.effectiveDateStart} 00:00:00'
	         	]]>
			</if>
			<if test="param.effectiveDateEnd!=null and ''!=param.effectiveDateEnd">
				<![CDATA[
				   and t.effective_date <= '${param.effectiveDateEnd} 23:59:59'
				]]>
			</if>
			<if test="param.failureDateStart!=null and ''!=param.failureDateStart">
				<![CDATA[
	        		and t.failure_date >= '${param.failureDateStart} 00:00:00'
	         	]]>
			</if>
			<if test="param.failureDateEnd!=null and ''!=param.failureDateEnd">
				<![CDATA[
				   and t.failure_date <= '${param.failureDateEnd} 23:59:59'
				]]>
			</if>
			<if test="param.createTimeStart!=null and ''!=param.createTimeStart">
				<![CDATA[
				   and t.create_time >= '${param.createTimeStart} 00:00:00'
				]]>
			</if>
			<if test="param.createTimeEnd!=null and ''!=param.createTimeEnd">
				<![CDATA[
				   and t.create_time <= '${param.createTimeEnd} 23:59:59'
				]]>
			</if>
			<if test="param.type!=null and '1'.toString()==param.type and list!=null">
			       and (s.supplier_code in (
			       <foreach collection="list" separator="," item="item">
						#{item,jdbcType=VARCHAR}
					</foreach>
			       )
			       <if test="param.type!=null and '1'.toString()==param.type and userNameList!=null">
						or t.create_user in (
						<foreach collection="userNameList" separator="," item="item">
							#{item,jdbcType=VARCHAR}
						</foreach>
						) 
				   </if>
				   )
			</if>
			<!-- 商标 -->
			<if test="param.trademark!=null and ''!=param.trademark">
				and t.id in (select contract_id from tbl_sp_supplier_contract_trademark where trademark = #{param.trademark,jdbcType=VARCHAR})
			</if>
			<if test="param.bindStatus!=null and ''!=param.bindStatus">
				and t.bind_status = #{param.bindStatus}
			</if>
			<if test="param.status!=null and ''!=param.status">
				and t.status = #{param.status}
			</if>
			<if test="param.listKind!=null and 'AUDIT_CONTRACT' == param.listKind">
			 	and (ex.is_old = '0' or ex.is_old is null or t.renew_flag = '3')
			 	and t.status in ('3','5','6','7','8')
			 	and s.supplier_type='招商供应商'
		  	</if>
		  	<if test="param.isNewContract!=null and ''!=param.isNewContract">
		  		<if test="1==param.isNewContract">
		  		and t.parent_contract_id is null
		  		</if>
				<if test="0==param.isNewContract">
		  		and t.parent_contract_id is not null
		  		</if>
			</if>
		</if>
	</sql>
	
	<select id="selectSupplierContractListForExport" resultMap="supplierContractMap">
		select temp.* from(select t.*,s.supplier_code,yc.user_name yccontact,s.supplier_type,ex.is_old
		,(select count(1) from tbl_sp_supplier_contract_attachment a where a.contract_id = t.id and a.attachment_type='1') contractAttachmentCount
		,(select count(1) from tbl_sp_supplier_contract_attachment a where a.contract_id = t.id and a.attachment_type='3') authorityAttachmentCount
		,(select count(1) from tbl_sp_supplier_contract_attachment a where a.contract_id = t.id and a.attachment_type='4') trademarkAttachmentCount
		from tbl_sp_supplier_contract t left join tbl_sp_supplier s on s.id = t.supplier_id
		left join tbl_merchant_supplier_expand ex on ex.merchant_code = s.supplier_code 
				left join tbl_supplier_yg_contact yc on yc.user_id = ex.yg_contact_user_id
				where 1=1
		<include refid="sql_conditon"/>
		
	 )temp where 1=1
	 <if test="param.haveUploadAttachment!=null and 'Y'.toString()==param.haveUploadAttachment">
			and temp.contractAttachmentCount > 0 
			and temp.authorityAttachmentCount > 0 and temp.trademarkAttachmentCount >0
	</if>
	<if test="param.haveUploadAttachment!=null and 'N'.toString()==param.haveUploadAttachment">
		   and (temp.contractAttachmentCount = 0 
			   or temp.authorityAttachmentCount = 0 or temp.trademarkAttachmentCount =0)
	</if>
	<if test="param.supplierType!=null and ''!=param.supplierType">
		and temp.supplier_type = #{param.supplierType}
	</if>
	<if test="param.orderBy!=null and ''!=param.orderBy">
		order by temp.${param.orderBy} 
			
			<if test="param.sequence!=null and ''!=param.sequence">
			${param.sequence}
			</if>
	</if>
	<if test="param.orderBy==null or ''==param.orderBy">
		order by temp.update_time desc, temp.contract_remaining_days desc,temp.mark_remaining_days desc
	</if>
	
	
	</select>
	<select id="selectSupplierContractList" resultMap="supplierContractMap">
		select temp.* from(select t.*,s.supplier_code,yc.user_name yccontact,s.supplier_type,ex.is_old
		,(select count(1) from tbl_sp_supplier_contract_attachment a where a.contract_id = t.id and a.attachment_type='1') contractAttachmentCount
		,(select count(1) from tbl_sp_supplier_contract_attachment a where a.contract_id = t.id and a.attachment_type='3') authorityAttachmentCount
		,(select count(1) from tbl_sp_supplier_contract_attachment a where a.contract_id = t.id and a.attachment_type='4') trademarkAttachmentCount
		from tbl_sp_supplier_contract t left join tbl_sp_supplier s on s.id = t.supplier_id
		left join tbl_merchant_supplier_expand ex on ex.merchant_code = s.supplier_code 
				left join tbl_supplier_yg_contact yc on yc.user_id = ex.yg_contact_user_id
				where 1=1
		<include refid="sql_conditon"/>
		
	 )temp where 1=1
	 <if test="param.haveUploadAttachment!=null and 'Y'.toString()==param.haveUploadAttachment">
			and temp.contractAttachmentCount > 0 
			and temp.authorityAttachmentCount > 0 and temp.trademarkAttachmentCount >0
	</if>
	<if test="param.haveUploadAttachment!=null and 'N'.toString()==param.haveUploadAttachment">
		   and (temp.contractAttachmentCount = 0 
			   or temp.authorityAttachmentCount = 0 or temp.trademarkAttachmentCount =0)
	</if>
	<if test="param.supplierType!=null and ''!=param.supplierType">
		and temp.supplier_type = #{param.supplierType}
	</if>
	<if test="param.orderBy!=null and ''!=param.orderBy">
		order by temp.${param.orderBy} 
			
			<if test="param.sequence!=null and ''!=param.sequence">
			${param.sequence}
			</if>
	</if>
	<if test="param.orderBy==null or ''==param.orderBy">
		order by temp.update_time desc, temp.contract_remaining_days desc,temp.mark_remaining_days desc
	</if>
	
	limit #{query.offset},#{query.pageSize}
	</select>
	
	
	<select id="selectSupplierContractCount" resultType="java.lang.Integer">
		select count(1) from(select t.*,s.supplier_code,yc.user_name yccontact,s.supplier_type,ex.is_old
		,(select count(1) from tbl_sp_supplier_contract_attachment a where a.contract_id = t.id and a.attachment_type='1') contractAttachmentCount
		,(select count(1) from tbl_sp_supplier_contract_attachment a where a.contract_id = t.id and a.attachment_type='3') authorityAttachmentCount
		,(select count(1) from tbl_sp_supplier_contract_attachment a where a.contract_id = t.id and a.attachment_type='4') trademarkAttachmentCount
		from tbl_sp_supplier_contract t left join tbl_sp_supplier s on s.id = t.supplier_id
		left join tbl_merchant_supplier_expand ex on ex.merchant_code = s.supplier_code 
				left join tbl_supplier_yg_contact yc on yc.user_id = ex.yg_contact_user_id
				where 1=1
		<include refid="sql_conditon"/>
	 )temp where 1=1
		 <if test="param.haveUploadAttachment!=null and 'Y'.toString()==param.haveUploadAttachment">
				and temp.contractAttachmentCount > 0 
				and temp.authorityAttachmentCount > 0 and temp.trademarkAttachmentCount >0
		</if>
		<if test="param.haveUploadAttachment!=null and 'N'.toString()==param.haveUploadAttachment">
			   and (temp.contractAttachmentCount = 0 
				   or temp.authorityAttachmentCount = 0 or temp.trademarkAttachmentCount =0)
		</if>
		<if test="param.supplierType!=null and ''!=param.supplierType">
			and temp.supplier_type = #{param.supplierType}
		</if>
	</select>
	
	<select id="selectSupplierContractById" resultMap="supplierContractMap">
		select t.*,s.supplier_code 
		from tbl_sp_supplier_contract t left join tbl_sp_supplier s on s.id = t.supplier_id
		where t.id = #{id,jdbcType=VARCHAR}
	</select>
	
	<select id="selectSupplierContractByContractNo" resultMap="supplierContractMap">
		select t.* from tbl_sp_supplier_contract t
		where t.contract_no = #{contractNo}
	</select>
	
	<!-- 附件 -->
	<resultMap id="supplierContractAttachmentMap" type="com.belle.yitiansystem.merchant.model.pojo.SupplierContractAttachment">
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="contract_id" property="contractId" jdbcType="VARCHAR" />
		<result column="attachment_name" property="attachmentName" jdbcType="VARCHAR" />
		<result column="attachment_real_name" property="attachmentRealName" jdbcType="VARCHAR" />
		<result column="attachment_type" property="attachmentType" jdbcType="VARCHAR" />
		<result column="supplier_id" property="supplierId" jdbcType="VARCHAR" />
		
	</resultMap>
	
	<insert id="insertSupplierContractAttachmentBatch">
		insert into tbl_sp_supplier_contract_attachment(id,contract_id,attachment_name,attachment_real_name,attachment_type,supplier_id)
		values
		<foreach collection="list" item="item" separator=",">
			(
				#{item.id,jdbcType=VARCHAR},
				#{item.contractId,jdbcType=VARCHAR},
				#{item.attachmentName,jdbcType=VARCHAR},
				#{item.attachmentRealName,jdbcType=VARCHAR},
				#{item.attachmentType,jdbcType=VARCHAR},
				#{item.supplierId,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	<!-- 批量删除附件 -->
	<delete id="deleteSupplierContractAttachmentByContractId">
		delete from tbl_sp_supplier_contract_attachment where contract_id = #{contractId,jdbcType=VARCHAR}
	</delete>
	<select id="selectSupplierContractAttachmentByContractId" resultMap="supplierContractAttachmentMap">
		select * from tbl_sp_supplier_contract_attachment where contract_id = #{contractId,jdbcType=VARCHAR}
	</select>
	
	<insert id="insertSupplierContractAttachment" parameterType="com.belle.yitiansystem.merchant.model.pojo.SupplierContractAttachment">
		insert into tbl_sp_supplier_contract_attachment(id,contract_id,attachment_name,attachment_real_name,attachment_type,supplier_id)
		values
			(
				#{vo.id,jdbcType=VARCHAR},
				#{vo.contractId,jdbcType=VARCHAR},
				#{vo.attachmentName,jdbcType=VARCHAR},
				#{vo.attachmentRealName,jdbcType=VARCHAR},
				#{vo.attachmentType,jdbcType=VARCHAR},
				#{vo.supplierId,jdbcType=VARCHAR}
			)
	</insert>
	<delete id="deleteAttachmentByVO" parameterType="com.belle.yitiansystem.merchant.model.pojo.SupplierContractAttachment" >
		delete from tbl_sp_supplier_contract_attachment where 
		id = #{vo.id,jdbcType=VARCHAR}
	</delete>
	<!-- 附件：查询附件VO是否已存在 -->
	<select id="queryAttachmentExistByVO" parameterType="com.belle.yitiansystem.merchant.model.pojo.SupplierContractAttachment"
										 resultMap="supplierContractAttachmentMap">
		select * from tbl_sp_supplier_contract_attachment where 
		<if test="vo.attachmentType==null">
		       1!=1 
		</if>
		<if test="vo.attachmentType!=null">
		 attachment_type = #{vo.attachmentType,jdbcType=VARCHAR}
		 
			 <if test="vo.attachmentType=='1' or vo.attachmentType=='3' or vo.attachmentType=='4'">
			  and contract_id = #{vo.contractId,jdbcType=VARCHAR}
			 </if>
		 	 <if test="vo.attachmentType!='1' and vo.attachmentType!='3' and vo.attachmentType!='4'">
			  and supplier_id = #{vo.supplierId,jdbcType=VARCHAR}
			 </if>
		</if>
		
		<if test="vo.attachmentName!=null and vo.attachmentName!=''">
		and attachment_name = #{vo.attachmentName,jdbcType=VARCHAR}
		</if>
		<if test="vo.attachmentRealName!=null and vo.attachmentRealName!=''">
		and attachment_real_name = #{vo.attachmentRealName,jdbcType=VARCHAR}
		</if>
		
	</select>
	
	
	
	<!-- 商标 -->
	<resultMap id="supplierContractTrademarkMap" type="com.belle.yitiansystem.merchant.model.pojo.SupplierContractTrademark">
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="contract_id" property="contractId" jdbcType="VARCHAR" />
		<result column="trademark" property="trademark" jdbcType="VARCHAR" />
		<result column="brand_no" property="brandNo" jdbcType="VARCHAR" />
		<result column="deduction_point" property="deductionPoint" jdbcType="INTEGER" />
		<result column="authorizer" property="authorizer" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="registered_trademark" property="registeredTrademark" jdbcType="VARCHAR" />
		<result column="registered_start_date" property="registeredStartDate" jdbcType="VARCHAR" />
		<result column="registered_end_date" property="registeredEndDate" jdbcType="VARCHAR" />
	</resultMap>
	<insert id="insertSupplierContractTrademarkBatch">
		insert into tbl_sp_supplier_contract_trademark(id,contract_id,trademark,brand_no,deduction_point,authorizer,type,registered_trademark,registered_start_date,registered_end_date)
		values
		<foreach collection="list" item="item" separator=",">
			(
				#{item.id,jdbcType=VARCHAR},
				#{item.contractId,jdbcType=VARCHAR},
				#{item.trademark,jdbcType=VARCHAR},
				#{item.brandNo,jdbcType=VARCHAR},
				#{item.deductionPoint,jdbcType=INTEGER},
				#{item.authorizer,jdbcType=VARCHAR},
				#{item.type,jdbcType=VARCHAR},
				#{item.registeredTrademark,jdbcType=VARCHAR},
				#{item.registeredStartDate,jdbcType=VARCHAR},
				#{item.registeredEndDate,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	<delete id="deleteSupplierContractTrademarkByContractId">
		delete from tbl_sp_supplier_contract_trademark where contract_id = #{contractId,jdbcType=VARCHAR}
	</delete>
	
	<select id="selectSupplierContractTrademark" resultMap="supplierContractTrademarkMap">
		select * from tbl_sp_supplier_contract_trademark where contract_id = #{contractId,jdbcType=VARCHAR}
		order by brand_no,trademark asc
	</select>
	
	<!-- 商标明细 -->
	<resultMap id="supplierContractTrademarkSubMap" type="com.belle.yitiansystem.merchant.model.pojo.SupplierContractTrademarkSub">
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="trademark_id" property="trademarkId" jdbcType="VARCHAR" />
		<result column="be_authorizer" property="beAuthorizer" jdbcType="VARCHAR" />
		<result column="level" property="level" jdbcType="VARCHAR" />
		<result column="authoriz_startdate" property="authorizStartdate" jdbcType="VARCHAR" />
		<result column="authoriz_enddate" property="authorizEnddate" jdbcType="VARCHAR" />
	</resultMap>
	
	<insert id="insertSupplierContractTrademarkSub">
		insert into tbl_sp_supplier_contract_trademark_sub(id,contract_id,trademark_id,be_authorizer,level,authoriz_startdate,authoriz_enddate)
		values
		<foreach collection="list" item="item" separator=",">
			(
				#{item.id,jdbcType=VARCHAR},
				#{item.contractId,jdbcType=VARCHAR},
				#{item.trademarkId,jdbcType=VARCHAR},
				#{item.beAuthorizer,jdbcType=VARCHAR},
				#{item.level,jdbcType=VARCHAR},
				#{item.authorizStartdate,jdbcType=VARCHAR},
				#{item.authorizEnddate,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	
	<delete id="deleteSupplierContractTrademarkSubByContractIdId">
		delete from tbl_sp_supplier_contract_trademark_sub where contract_id = #{contractId,jdbcType=VARCHAR}
	</delete>
	
	<select id="selectSupplierContractTrademarkSubByTrademarkId" resultMap="supplierContractTrademarkSubMap">
		select * from tbl_sp_supplier_contract_trademark_sub where trademark_id = #{trademarkId,jdbcType=VARCHAR} order by level
	</select>
	
	
	<resultMap id="supplierYgContactMap" type="com.belle.yitiansystem.merchant.model.pojo.SupplierYgContact4MyBatis">
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="leads" property="leads" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 货品负责人 -->
	<select id="selectYgContact" resultMap="supplierYgContactMap">
		select * from tbl_supplier_yg_contact where user_name = #{userName}
		or leads like '%${userName}%'
	</select>
	
	<select id="selectMerchantCodeByYgContact" resultType="java.lang.String">
		select e.merchant_code from tbl_merchant_supplier_expand e
		where e.yg_contact_user_id  in (
			<foreach collection="list" separator="," item="item">
				#{item,jdbcType=VARCHAR}
			</foreach>
		)
	</select>
	
	
	<resultMap id="supplierSpMap" type="com.belle.yitiansystem.merchant.model.pojo.SupplierSp4MyBatis">
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="supplier_code" property="supplierCode" jdbcType="VARCHAR" />
		<result column="supplier" property="supplier" jdbcType="VARCHAR" />
		<result column="english_name" property="englishName" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="sql_conditon_contract">
		<if test="param != null">
		<if test="param.supplier!=null and ''!= param.supplier">
			and t.supplier like '%${param.supplier}%'
		</if>
		<if test="param.supplierCode!=null and ''!= param.supplierCode">
			and t.supplier_code = #{param.supplierCode,jdbcType=VARCHAR}
		</if>
		<if test="param.supplierType!=null and ''!= param.supplierType">
			and t.supplier_type = #{param.supplierType,jdbcType=VARCHAR}
		</if>
		<if test="param.isOld!=null">
			<if test="param.isOld == 1">
				and b.is_old = '1'
			</if>
			<if test="param.isOld != 1">
				and (b.is_old = '0' or b.is_old is null)
			</if>
		</if>
		</if>
		AND t.delete_flag = 1
		
		<if test="param.invoiceFlag!=1 ">
			AND NOT EXISTS (SELECT c.supplier_id FROM tbl_sp_supplier_contract c
				WHERE c.supplier_id = t.id)
		</if>	
	
	</sql>
	
	<select id="selectSupplierSpByYgContact" resultMap="supplierSpMap">
		select e.* from tbl_sp_supplier e where 1=1
		<if test="list != null">
			and e.supplier_code  in (
			<foreach collection="list" separator="," item="item">
				#{item,jdbcType=VARCHAR}
			</foreach>
			)
		</if>
		<if test="supplierType!=null and ''!= supplierType">
			and e.supplier_type = #{supplierType,jdbcType=VARCHAR}
		</if>
	</select>
	<!-- 查询供应商列表，没有绑定合同的排前面 -->
	<select id="selectSupplier4ContractList" resultMap="supplierSpMap">
		SELECT t.supplier,	t.supplier_code, t.id,	t.english_name
		FROM tbl_sp_supplier t,	tbl_merchant_supplier_expand b
		WHERE t.id = b.supplier_id
		<include refid="sql_conditon_contract"/>
		ORDER BY CASE WHEN b.contract_no IS NULL OR b.contract_no = '' THEN 0 ELSE 1 END, contract_no DESC
		limit #{query.offset},#{query.pageSize}
	</select>
	<!-- 查询供应商列表数量-->
	<select id="selectSupplier4ContractCount" resultType="java.lang.Integer">
		SELECT count(1)
		FROM tbl_sp_supplier t,	tbl_merchant_supplier_expand b
		WHERE t.id = b.supplier_id
		<include refid="sql_conditon_contract"/>
	</select>
	
	<update id="updateSupplierContractBindStatus" parameterType="com.belle.yitiansystem.merchant.model.pojo.SupplierContract">
		update tbl_sp_supplier_contract c set c.supplier_id= #{supplierId,jdbcType=VARCHAR}, c.bind_status='1'
		 where c.supplier= #{supplier,jdbcType=VARCHAR}  
	</update>
	
		<update id="autoUpdateContractRemainingDays1">
		update tbl_sp_supplier_contract
		set contract_remaining_days =  DATEDIFF(failure_date, curdate()) 
		<![CDATA[
		where DATEDIFF(failure_date, curdate()) >0
		]]>
	</update>
	
	<update id="autoUpdateContractRemainingDays2">
		update tbl_sp_supplier_contract
		set contract_remaining_days = 0
		<![CDATA[
		where DATEDIFF(failure_date, curdate()) <=0
		]]>
	</update>
	
	<update id="autoUpdateMarkRemainingDays">
		UPDATE tbl_sp_supplier_contract c
	    SET c.mark_remaining_days = CASE c.id
	        <foreach collection="supplierContractList" item="item">
	          WHEN #{item.contractNo,jdbcType=VARCHAR} THEN #{item.markRemainingDays}
	        </foreach>
	    END
	</update>
	
	<select id="computeAndSelectTrademarkRemainingDays" resultType="java.util.Map">
		select temp.contract_id id,
		<![CDATA[
		if(temp.days>0,temp.days,0) 
		]]>
		as num from (
				select ts.contract_id ,min( DATEDIFF(ts.authoriz_enddate,CURDATE() ) ) days
				from tbl_sp_supplier_contract_trademark_sub ts 
				GROUP BY ts.contract_id 
		) temp
	</select>
	<!-- 根据供应商ID查询合同列表 -->
	<select id="selectSupplierContractListBySupplierId" resultMap="supplierContractMap">
		select t.*  
		from tbl_sp_supplier_contract t
		where t.supplier_id = #{supplierId,jdbcType=VARCHAR}
		order by t.create_time desc,t.bind_status desc
	</select>
	
	<!-- 根据供应商ID查询当前合同-->
	<select id="getCurrentContractBySupplierId" resultMap="supplierContractMap">
		select t.*  
		from tbl_sp_supplier_contract t
		where t.supplier_id = #{supplierId,jdbcType=VARCHAR} and t.renew_flag in ('1','2')
		
	</select>
	
	<!-- 根据供应商ID查询续签合同-->
	<select id="getRenewContractBySupplierId" resultMap="supplierContractMap">
		select t.*  
		from tbl_sp_supplier_contract t
		where t.supplier_id = #{supplierId,jdbcType=VARCHAR} and t.renew_flag ='3'
		
	</select>
	
	 <!--  由于  tbl_merchant_supplier_expand.supplier_id 是新建的，可能没有数据，所以需要同步一次 -->
  <update id="updateSupplierIdTOExpand" >
    update tbl_merchant_supplier_expand  
	inner join tbl_sp_supplier  on 
	tbl_merchant_supplier_expand.merchant_code = tbl_sp_supplier.supplier_code
	set tbl_merchant_supplier_expand.supplier_id  = tbl_sp_supplier.id
     
  </update>
  
  <!-- 将renew_flag =1 的合同更新到扩展表里的  contract_no  字段  -->
  <update id="updateExpandContract" >
  update tbl_merchant_supplier_expand
  inner join  
     (select  supplier_id ,contract_no from tbl_sp_supplier_contract where renew_flag in(1,2)) sss
   on 
      tbl_merchant_supplier_expand.supplier_id = sss.supplier_id
   set tbl_merchant_supplier_expand.contract_no  = sss.contract_no
  
  </update>
  
   <update id="contractLeftDays">
    update tbl_merchant_supplier_expand
	INNER JOIN 
	 (select contract_no , DATEDIFF(failure_date, curdate()) fail from tbl_sp_supplier_contract ) sss
	 on  
	tbl_merchant_supplier_expand.contract_no = sss.contract_no 
	set  contract_remaining_days  = 
	sss.fail 
   
   </update>
   
   <update id="contractLeftDaysByRenew">
    UPDATE tbl_merchant_supplier_expand
	RIGHT JOIN (
		SELECT
			supplier_id AS id,
			contract_remaining_days as days
		FROM
			tbl_sp_supplier_contract
		WHERE
			renew_flag = '3'
		AND STATUS = '5'
	) s ON  supplier_id = s.id 
	SET contract_remaining_days = s.days
   </update>
   <!-- 
	 (case when sss.fail > 0   then  sss.fail
	 else 0  end)
    -->
   
   <update id="markLeftDays">
   update tbl_merchant_supplier_expand
	inner join 
		(
		 select contract_no , sub.days
		from  tbl_sp_supplier_contract c ,
		(select ts.contract_id ,min( DATEDIFF(ts.authoriz_enddate,CURDATE() ) ) days
						from tbl_sp_supplier_contract_trademark_sub ts 
						GROUP BY ts.contract_id 
		) sub   
		where c.id = sub.contract_id
		) sss
	on 
		tbl_merchant_supplier_expand.contract_no = sss.contract_no 
	set  mark_remaining_days    =
	sss.days 
   </update>
   <!-- 
		 (case when sss.days > 0   then  sss.days 
	 else 0  end)
    -->
   <update id="businessRemainDays">
  update tbl_merchant_supplier_expand 
	set business_remaining_days =
    DATEDIFF(business_validity_end,CURDATE() )
   </update>
<!-- 	(case when DATEDIFF(business_validity_end,CURDATE() ) > 0   then  DATEDIFF(business_validity_end,CURDATE() ) 
	 else 0  end) -->
   
    <update id="institutionalDays">
   update tbl_merchant_supplier_expand 
	set institutional_remaining_days = 
    DATEDIFF(institutional_validity_end,CURDATE() )
    </update>
<!-- 	 
	 (case when DATEDIFF(institutional_validity_end,CURDATE() ) > 0   then  DATEDIFF(institutional_validity_end,CURDATE() ) 
	 else 0  end) -->
    
    
     <update id="updateOverDayContract">
     	<![CDATA[
	    UPDATE tbl_sp_supplier_contract
		SET STATUS = 8
		WHERE
			DATEDIFF(failure_date, curdate()) < 0
		AND renew_flag != 3
		AND (
			(
				STATUS = 1
				AND EXISTS (
					SELECT
						1
					FROM
						tbl_merchant_supplier_expand b
					WHERE
						b.supplier_id = supplier_id
					AND (b.is_old = 0 OR b.is_old IS NULL)
				)
			)
			OR STATUS IN (5, 7)
		)
     ]]>
    </update>
    <!-- 自动更新 合同表里的商标到期时间 -->
    <update id="updateContractMarkOverdays">
     	<![CDATA[
    
        update tbl_sp_supplier_contract c
		inner join 
		(select ts.contract_id ,min( DATEDIFF(ts.authoriz_enddate,CURDATE() ) ) days
								from tbl_sp_supplier_contract_trademark_sub ts 
								GROUP BY ts.contract_id ) sub 
		on c.id =  sub.contract_id 
		set mark_remaining_days = sub.days
		 ]]>
     </update>
     <!-- 自动更新 合同表里的合同到期时间 -->
    <update id="updateContractOverdays">
     	<![CDATA[
    
    	update tbl_sp_supplier_contract
		set contract_remaining_days =  DATEDIFF(failure_date, curdate()) ;

		 ]]>
     </update>
    
    <!-- 批量删除除了合同之外的附件 -->
	<delete id="delAttachmentExceptContract">
		delete from tbl_sp_supplier_contract_attachment where 
		(supplier_id = #{supplierId,jdbcType=VARCHAR} and attachment_type in ('9','5','6','7','8') ) or
		 (contract_id = #{contractId,jdbcType=VARCHAR} and attachment_type in ('3','4') )
		
	</delete>
	
	<!-- 根据供应商ID查询当前商家的资质附件（不包括合同的3种附件）-->
	<select id="getSupplierAttachmentBySupplierId" resultMap="supplierContractAttachmentMap">
		select a.id,a.contract_id,a.attachment_name,a.attachment_real_name,a.attachment_type,a.supplier_id  
		from tbl_sp_supplier_contract_attachment a
		where a.supplier_id = #{supplierId,jdbcType=VARCHAR} and a.attachment_type in ('9','5','6','7')
		
	</select>
	<!-- 根据供应商ID查询当前商家的合同附件（不包括商家的5种附件）-->
	<select id="getContractAttachmentByContractId" resultMap="supplierContractAttachmentMap">
		select a.id,a.contract_id,a.attachment_name,a.attachment_real_name,a.attachment_type,a.supplier_id  
       from tbl_sp_supplier_contract_attachment a where a.contract_id = #{contractId,jdbcType=VARCHAR} and a.attachment_type in ('1','2','3','4') 
	</select>
</mapper>